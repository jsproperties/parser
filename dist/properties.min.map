{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap d2d0b200f46a6aebcdca","webpack:///./src/parse-to-entries.js","webpack:///./src/options.js","webpack:///./src/index.js","webpack:///./src/properties.pegjs","webpack:///./src/parse-to-properties.js","webpack:///./src/stringify.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","parseToEntries","input","options","_options","parseOptions","parseToEntriesOptions","PropertiesParser","parse","availableOptionNames","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","option","value","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","_parseToEntries","forEach","key","_parseToProperties","_stringify","peg$SyntaxError","message","expected","found","location","Error","captureStackTrace","child","parent","ctor","constructor","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","class","escapedParts","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","replace","j","descriptions","type","sort","slice","join","describeExpected","SyntaxError","peg$result","peg$FAILED","peg$startRuleFunctions","PropertiesFile","peg$parsePropertiesFile","peg$startRuleFunction","peg$c0","lines","trailing","push","filter","x","peg$c1","line","eol","peg$c2","all","element","original","peg$c3","start","offset","peg$c4","peg$c5","peg$otherExpectation","peg$c6","peg$c7","peg$classExpectation","peg$c8","sep","peg$c9","peg$c10","peg$c11","peg$c12","a","peg$c13","peg$c14","peg$c15","b","peg$c16","peg$c17","v","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$literalExpectation","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$currPos","peg$savedPos","peg$posDetailsCache","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","peg$fail","peg$buildStructuredError","s0","s1","s2","peg$parseFullLine","peg$parseLine","peg$parseTrailingLine","peg$parseNL","s3","peg$parse_","peg$parseCONT","test","charAt","peg$parseCommentCharacter","peg$parseC","peg$parseComment","s4","peg$parseESCAPE","peg$parsePropertyKey","s5","peg$parseWS","peg$parseKeyElementSeparator","peg$parsePropertyElement","peg$parsePropertyEntry","substr","parseToProperties","entriesToProperties","parseToPropertiesOptions","entries","properties","_loop","entry","unescapeProperty","namespace","namespacedKey","split","","match","code","String","fromCharCode","parseInt","escaped","stringify","stringifyFromEntries","stringifyFromProperties","output","escapeKey","escapeElement","_extends"],"mappings":"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","file":"properties.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Properties\"] = factory();\n\telse\n\t\troot[\"Properties\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d2d0b200f46a6aebcdca","// Import PEG.js generated parser through pegjs-loader\nimport * as PropertiesParser from './properties.pegjs';\nimport { parseOptions } from './options';\n\n\nconst parseToEntriesOptions = [\n  'all',        // Include empty and blank lines\n  'original',   // Include original logical line in output\n  'eol',        // Include eol (end of line) in output\n  'location',   // Include location info in output\n];\n\n\n/**\n * Parse .properties file content to an array of object containing key, element,\n * and optionally original line and location.\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {Array} Parsed result in array.\n */\nexport function parseToEntries(input, options) {\n  options = parseOptions(options, parseToEntriesOptions);\n  return PropertiesParser.parse(input, options);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parse-to-entries.js","/**\n * Normalize options.\n * @param {*} options Options to be parsed; it can be object, boolean, null or undefined.\n * @param {!Array<string>} availableOptionNames All possible option names.\n * @returns {object} Normalized options.\n */\nexport function parseOptions(options, availableOptionNames) {\n  // Fix `null`, `false` as the options\n  options = options || {};\n\n  // `true` is a shortcut to turn all options on\n  if (options === true) {\n    options = {};\n    for (let option of availableOptionNames) {\n      options[option] = true;\n    }\n    return options;\n  }\n\n  // { '': true } is also a shorcut to turn all options on, while allow\n  // individual options to be turned off by setting them explicitly.\n  if (typeof options[''] === 'boolean') {\n    for (let option of availableOptionNames) {\n      if (!(option in options)) {\n        options[option] = options[''];\n      }\n    }\n  }\n\n  return options;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/options.js","export * from './parse-to-entries';\nexport * from './parse-to-properties';\nexport * from './stringify';\n\n// Export everything this module exports as a default export\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { PropertiesFile: peg$parsePropertiesFile },\n      peg$startRuleFunction  = peg$parsePropertiesFile,\n\n      peg$c0 = function(lines, trailing) {\n            // Add the trailing line, i.e. line without eol\n            if (trailing) lines.push(trailing);\n            // Filter out blank and comment lines\n            return lines.filter(x => x !== undefined);\n          },\n      peg$c1 = function(line, eol) {\n            if (!line) return;\n            if (options.eol) line.eol = eol;\n            return line;\n          },\n      peg$c2 = function(line) {\n            if (!line) {\n              if (options.all) {\n                line = { key: null, element: null };\n              } else {\n                return undefined;\n              }\n            }\n\n            if (options.original) line.original = text();\n            if (options.eol) line.eol = null;\n            if (options.location) line.location = location();\n\n            return line;\n          },\n      peg$c3 = function(line) {\n            // If the offset of start and end match, there is actually no trailing\n            // line; TrailingLine is matched in this case because a line itself\n            // (not counting eol) may contain no characters.\n            return location().start.offset === location().end.offset ?\n                undefined : line;\n          },\n      peg$c4 = function() {},\n      peg$c5 = peg$otherExpectation(\"CommentCharacter\"),\n      peg$c6 = /^[#!]/,\n      peg$c7 = peg$classExpectation([\"#\", \"!\"], false, false),\n      peg$c8 = function(key, sep, element) {\n            // Blank Line:\n            // No need to test element, as whenever there is an element, there is a separator.\n            // Note: Key and element can be empty at the same time.\n            if (!key && !sep) return;\n\n            // Property Entry:\n            // Return an empty string for key and/or element if empty.\n            return { key: key || \"\", element: element || \"\" };\n          },\n      peg$c9 = peg$otherExpectation(\"PropertyKey\"),\n      peg$c10 = /^[^\\r\\n\\\\:=]/,\n      peg$c11 = peg$classExpectation([\"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c12 = function(a) {},\n      peg$c13 = /^[^ \\t\\f\\r\\n\\\\:=]/,\n      peg$c14 = peg$classExpectation([\" \", \"\\t\", \"\\f\", \"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c15 = function(a, b) { return a + b.join(''); },\n      peg$c16 = peg$otherExpectation(\"PropertyElement\"),\n      peg$c17 = function(v) { return v.join(''); },\n      peg$c18 = peg$otherExpectation(\"KeyElementSeparator\"),\n      peg$c19 = /^[:=]/,\n      peg$c20 = peg$classExpectation([\":\", \"=\"], false, false),\n      peg$c21 = peg$otherExpectation(\"White Space\"),\n      peg$c22 = /^[ \\t\\f]/,\n      peg$c23 = peg$classExpectation([\" \", \"\\t\", \"\\f\"], false, false),\n      peg$c24 = peg$otherExpectation(\"White Spaces\"),\n      peg$c25 = peg$otherExpectation(\"Character\"),\n      peg$c26 = /^[^\\r\\n]/,\n      peg$c27 = peg$classExpectation([\"\\r\", \"\\n\"], true, false),\n      peg$c28 = function(c) {\n            // Ignore final dangling backslash\n            return c === \"\\\\\" ? undefined : c;\n          },\n      peg$c29 = peg$otherExpectation(\"Line Terminator\"),\n      peg$c30 = \"\\r\\n\",\n      peg$c31 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c32 = /^[\\n\\r]/,\n      peg$c33 = peg$classExpectation([\"\\n\", \"\\r\"], false, false),\n      peg$c34 = peg$otherExpectation(\"Line Continuation\"),\n      peg$c35 = \"\\\\\",\n      peg$c36 = peg$literalExpectation(\"\\\\\", false),\n      peg$c37 = peg$otherExpectation(\"Escape Sequence\"),\n      peg$c38 = peg$anyExpectation(),\n      peg$c39 = function() { return text(); },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsePropertiesFile() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseFullLine();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseFullLine();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTrailingLine();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFullLine() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLine() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseCONT();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseCONT();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseComment();\n        if (s3 === peg$FAILED) {\n          s3 = peg$parsePropertyEntry();\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c2(s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTrailingLine() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseComment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCommentCharacter();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseC();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseC();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentCharacter() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c6.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyEntry() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePropertyKey();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseKeyElementSeparator();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePropertyElement();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c8(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyKey() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseESCAPE();\n    if (s1 === peg$FAILED) {\n      if (peg$c10.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseCONT();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s3;\n        s4 = peg$c12(s1);\n      }\n      s3 = s4;\n      if (s3 === peg$FAILED) {\n        s3 = peg$parseESCAPE();\n        if (s3 === peg$FAILED) {\n          if (peg$c13.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseCONT();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c12(s1);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseESCAPE();\n          if (s3 === peg$FAILED) {\n            if (peg$c13.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyElement() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseCONT();\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c4();\n    }\n    s2 = s3;\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseESCAPE();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseC();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parseCONT();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c4();\n        }\n        s2 = s3;\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseESCAPE();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseC();\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyElementSeparator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCONT();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCONT();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parseCONT();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseCONT();\n        }\n        if (s4 !== peg$FAILED) {\n          if (peg$c19.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseWS();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseCONT();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseCONT();\n          }\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c22.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseWS();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWS();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseC() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c26.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c28(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c30) {\n      s0 = peg$c30;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s0 === peg$FAILED) {\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCONT() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseESCAPE() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseCONT();\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c35;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n\n    // Whether to include blank and comment lines\n    //options.all = true;\n    // Whether to include the original logical line\n    //options.original = true;\n    // Whether to include eol (end of line)\n    //options.eol = true;\n    // Whether to include location info\n    //options.location = true;\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/properties.pegjs","import { parseToEntries } from './parse-to-entries';\nimport { parseOptions } from './options';\n\n\nconst parseToPropertiesOptions = [\n  'namespace',  // Parse dot separated keys as namespaced\n];\n\n\n/**\n * Parse .properties file content to a properties object, with property key as\n * the key and property element as the value.\n *\n * Alias of parseToProperties\n *\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {object} Parsed result in properties object.\n */\nexport function parse(input, options) {\n  return parseToProperties(input, options);\n}\n\n/**\n * Parse .properties file content to a properties object, with property key as\n * the key and property element as the value.\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {object} Parsed result in properties object.\n */\nexport function parseToProperties(input, options) {\n  let entries = parseToEntries(input);\n  return entriesToProperties(entries, options);\n}\n\n/**\n * Convert parsed entries to a properties object.\n * @param {Array} entries Entries to be converted.\n * @param {Object} [options] Options for converting\n * @returns {object} Converted properties object.\n */\nexport function entriesToProperties(entries, options) {\n  options = parseOptions(options, parseToPropertiesOptions);\n  let properties = {};\n\n  for (let entry of entries) {\n    // Only key and element are relevant\n    let { key, element } = entry;\n\n    // Blank and comment lines are ignored\n    if (key === null) continue;\n\n    // Parsed array adheres to what user authored,\n    // while in properties, we need to unescape backslashes.\n    key = unescapeProperty(key);\n    element = unescapeProperty(element);\n\n    // Assign to properties by key, later entries overwrite previous ones\n    if (options.namespace) {\n      let namespacedKey = parseNamespace(key);\n      let property = properties;\n      namespacedKey.forEach((name, i) => {\n        // This is the last component of the key\n        if (i === namespacedKey.length - 1) {\n          property[name] = element;\n          return;\n        }\n\n        // This is part of the namespace\n        if (name in property) {\n          // Namespace itself and keys under it may all have values\n          // e.g. \"foo = bar\" \"foo.qux = quux\"\n          if (typeof property[name] === 'string') {\n            // Make value of namespace a value of an empty key under the\n            // namespace\n            property[name] = { '': property[name] };\n          }\n        } else {\n          property[name] = {};\n        }\n        property = property[name];\n      });\n    } else {\n      properties[key] = element;\n    }\n  }\n\n  return properties;\n}\n\n\n/**\n * Unescape backslash escaped sequences.\n * @param {string} input String to be mutated.\n * @returns {string} Unescaped input.\n * @throws {SyntaxError} Invalid Unicode escape sequence\n */\nfunction unescapeProperty(input) {\n  // Unescape unicode\n  let output = input.replace(/\\\\u([0-9A-Fa-f]{0,4})/g, (match, code) => {\n    if (code.length !== 4) throw new SyntaxError('Invalid Unicode escape sequence');\n    return String.fromCharCode(parseInt(code, 16));\n  });\n\n  // Unescape other single character\n  return output.replace(/\\\\(.)/g, (match, escaped) => {\n    switch (escaped) {\n      case 'f': return '\\f';\n      case 'n': return '\\n';\n      case 'r': return '\\r';\n      case 't': return '\\t';\n      default: return escaped;\n    }\n  });\n}\n\n/**\n * Turn dot separated string into an array of relevant components.\n * @param {string} key The dot separated string.\n * @returns {Array} Array of key components.\n */\nfunction parseNamespace(key) {\n  return key.split('.');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parse-to-properties.js","/**\n * Stringify properties object or entries to .properties file content.\n * @param {Array | Object} input Properties object or entries.\n * @param {Object} [options] Stringify options.\n * @returns {string} .properties file content.\n */\nexport function stringify(input, options) {\n  if (input instanceof Array) {\n    return stringifyFromEntries(input, options);\n  }\n\n  return stringifyFromProperties(input, options);\n}\n\n/**\n * Stringify entries to .properties file content.\n * @param {Array} entries Property entries.\n * @param {Object} [options] Stringify options, used when specified fields are\n *     not available in each entry.\n * @returns {string} .properties file content.\n */\nexport function stringifyFromEntries(entries, options) {\n  options = parseOptions(options);\n\n  let output = '';\n  for (let entry of entries) {\n    let sep = entry.sep || options.sep;\n    let eol = 'eol' in entry\n      ? entry.eol || ''   // Use empty string in case eol is null.\n      : options.eol;\n\n    // Prefer original if available\n    if (entry.original != null) {\n      output += entry.original;\n    } else {\n      // Output a blank line for blank and comment entry\n      output += entry.key == null || entry.element == null\n        ? '' : entry.key + sep + entry.element;\n    }\n\n    output += eol;\n  }\n\n  return output;\n}\n\n/**\n * Stringify properties object to .properties file content.\n * @param {Object} properties Properties object.\n * @param {Object} [options] Stringify options.\n * @returns {string} .properties file content.\n */\nexport function stringifyFromProperties(properties, options) {\n  options = parseOptions(options);\n\n  let output = '';\n  for (let key in properties) {\n    let element = properties[key];\n    if (typeof element === 'string') {\n      if (options.namespace) {\n        output += escapeKey(options.namespace);\n\n        // Add a dot after namespace if key is not empty\n        if (key) {\n          output += '.';\n        }\n      }\n      output += escapeKey(key) +\n          options.sep +\n          escapeElement(element) +\n          options.eol;\n    } else {\n      // Namespaced properties\n      let namespace = options.namespace\n        ? options.namespace + '.' + key\n        : key;\n      output += stringifyFromProperties(element,\n          Object.assign({}, options, { namespace: namespace }));\n    }\n  }\n\n  return output;\n}\n\n/**\n * Normalize user provided options.\n * @param {*} options Original options.\n * @returns {Object} Normalized options.\n */\nfunction parseOptions(options) {\n  options = options || {};\n  options.sep = options.sep || ' = ';\n  options.eol = options.eol || '\\r\\n';\n  return options;\n}\n\n/**\n * Escape special characters in property key.\n * @param {string} key Key to be mutated.\n * @returns {string} Escaped key.\n */\nfunction escapeKey(key) {\n  return key.replace(/[\\s\\S]/g, (match) => {\n    switch (match) {\n      case '=': return '\\\\=';\n      case ':': return '\\\\:';\n      case ' ': return '\\\\ ';\n      default: return escapeElement(match);\n    }\n  });\n}\n\n/**\n * Escape special characters in property element.\n * @param {string} element Element to be mutated.\n * @returns {string} Escaped element.\n */\nfunction escapeElement(element) {\n  return element.replace(/[\\s\\S]/g, (match) => {\n    switch (match) {\n      case '\\\\': return '\\\\\\\\';\n      case '\\f': return '\\\\f';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n      case '\\t': return '\\\\t';\n      default: return match;\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stringify.js"],"sourceRoot":""}