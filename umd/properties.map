{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e4d1ea6925b355887b7b","webpack:///./src/parse-to-entries.js","webpack:///./src/options.js","webpack:///./src/index.js","webpack:///./src/properties.pegjs","webpack:///./src/parse-to-properties.js","webpack:///./src/stringify.js"],"names":["parseToEntries","PropertiesParser","parseToEntriesOptions","input","options","parse","parseOptions","availableOptionNames","option","exports","peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","Error","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","i","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpectation","type","describeExpected","descriptions","j","sort","slice","join","describeFound","peg$parse","peg$FAILED","peg$startRuleFunctions","PropertiesFile","peg$parsePropertiesFile","peg$startRuleFunction","peg$c0","lines","trailing","push","filter","x","undefined","peg$c1","line","eol","peg$c2","indent","all","key","element","sep","original","peg$c3","start","offset","peg$c4","peg$c5","peg$otherExpectation","peg$c6","peg$c7","peg$classExpectation","peg$c8","property","peg$c9","peg$c10","peg$c11","peg$c12","a","peg$c13","peg$c14","peg$c15","b","peg$c16","peg$c17","v","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","c","peg$c29","peg$c30","peg$c31","peg$literalExpectation","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$anyExpectation","peg$c39","peg$currPos","peg$savedPos","peg$posDetailsCache","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computeLocation","peg$buildStructuredError","error","peg$buildSimpleError","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","peg$fail","s0","s1","s2","peg$parseFullLine","peg$parseTrailingLine","peg$parseLine","peg$parseNL","s3","s4","s5","peg$parse_","peg$parseCONT","peg$parseComment","peg$parsePropertyEntry","peg$parseCommentCharacter","peg$parseC","test","charAt","peg$parsePropertyKey","peg$parseKeyElementSeparator","peg$parsePropertyElement","peg$parseESCAPE","peg$parseWS","substr","module","SyntaxError","parseToProperties","entriesToProperties","parseToPropertiesOptions","entries","properties","entry","unescapeProperty","namespace","namespacedKey","parseNamespace","forEach","output","match","code","String","fromCharCode","parseInt","escaped","split","stringify","stringifyFromEntries","stringifyFromProperties","escapeKey","escapeElement"],"mappings":"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","file":"properties.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Properties\"] = factory();\n\telse\n\t\troot[\"Properties\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e4d1ea6925b355887b7b","// Import PEG.js generated parser through pegjs-loader\nimport * as PropertiesParser from './properties.pegjs';\nimport { parseOptions } from './options';\n\n\nconst parseToEntriesOptions = [\n  'all',        // Include empty and blank lines\n  'sep',        // Include separator in output\n  'indent',     // Include indentation in output\n  'eol',        // Include eol (end of line) in output\n  'original',   // Include original logical line in output\n  'location',   // Include location info in output\n];\n\n\n/**\n * Parse .properties file content to an array of object containing key, element,\n * and optionally original line and location.\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {Array} Parsed result in array.\n */\nexport function parseToEntries(input, options) {\n  options = parseOptions(options, parseToEntriesOptions);\n  return PropertiesParser.parse(input, options);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parse-to-entries.js","/**\n * Normalize options.\n * @param {*} options Options to be parsed; it can be object, boolean, null or undefined.\n * @param {!Array<string>} availableOptionNames All possible option names.\n * @returns {object} Normalized options.\n */\nexport function parseOptions(options, availableOptionNames) {\n  // Fix `null`, `false` as the options\n  options = options || {};\n\n  // `true` is a shortcut to turn all options on\n  if (options === true) {\n    options = {};\n    for (let option of availableOptionNames) {\n      options[option] = true;\n    }\n    return options;\n  }\n\n  // { '': true } is also a shorcut to turn all options on, while allow\n  // individual options to be turned off by setting them explicitly.\n  if (typeof options[''] === 'boolean') {\n    for (let option of availableOptionNames) {\n      if (!(option in options)) {\n        options[option] = options[''];\n      }\n    }\n  }\n\n  return options;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/options.js","export * from './parse-to-entries';\nexport * from './parse-to-properties';\nexport * from './stringify';\n\n// Export everything this module exports as a default export\nexport default exports;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { PropertiesFile: peg$parsePropertiesFile },\n      peg$startRuleFunction  = peg$parsePropertiesFile,\n\n      peg$c0 = function(lines, trailing) {\n            // Add the trailing line, i.e. line without eol\n            if (trailing) lines.push(trailing);\n            // Filter out blank and comment lines\n            return lines.filter(x => x !== undefined);\n          },\n      peg$c1 = function(line, eol) {\n            if (!line) return;\n            if (options.eol) line.eol = eol;\n            return line;\n          },\n      peg$c2 = function(indent, line) {\n            if (!line) {\n              if (options.all) {\n                line = { key: null, element: null };\n                if (options.sep) line.sep = null;\n              } else {\n                return undefined;\n              }\n            }\n\n            if (options.indent) line.indent = indent;\n            if (options.eol) line.eol = null;\n            if (options.original) line.original = text();\n            if (options.location) line.location = location();\n\n            return line;\n          },\n      peg$c3 = function(line) {\n            // If the offset of start and end match, there is actually no trailing\n            // line; TrailingLine is matched in this case because a line itself\n            // (not counting eol) may contain no characters.\n            return location().start.offset === location().end.offset ?\n                undefined : line;\n          },\n      peg$c4 = function() {},\n      peg$c5 = peg$otherExpectation(\"CommentCharacter\"),\n      peg$c6 = /^[#!]/,\n      peg$c7 = peg$classExpectation([\"#\", \"!\"], false, false),\n      peg$c8 = function(key, sep, element) {\n            // Blank Line:\n            // No need to test element, as whenever there is an element, there is a separator.\n            // Note: Key and element can be empty at the same time.\n            if (!key && !sep) return;\n\n            // Property Entry:\n            // Return an empty string for key and/or element if empty.\n            var property = { key: key || \"\", element: element || \"\" };\n            if (options.sep) property.sep = sep;\n            return property;\n          },\n      peg$c9 = peg$otherExpectation(\"PropertyKey\"),\n      peg$c10 = /^[^\\r\\n\\\\:=]/,\n      peg$c11 = peg$classExpectation([\"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c12 = function(a) {},\n      peg$c13 = /^[^ \\t\\f\\r\\n\\\\:=]/,\n      peg$c14 = peg$classExpectation([\" \", \"\\t\", \"\\f\", \"\\r\", \"\\n\", \"\\\\\", \":\", \"=\"], true, false),\n      peg$c15 = function(a, b) { return a + b.join(''); },\n      peg$c16 = peg$otherExpectation(\"PropertyElement\"),\n      peg$c17 = function(v) { return v.join(''); },\n      peg$c18 = peg$otherExpectation(\"KeyElementSeparator\"),\n      peg$c19 = /^[:=]/,\n      peg$c20 = peg$classExpectation([\":\", \"=\"], false, false),\n      peg$c21 = peg$otherExpectation(\"White Space\"),\n      peg$c22 = /^[ \\t\\f]/,\n      peg$c23 = peg$classExpectation([\" \", \"\\t\", \"\\f\"], false, false),\n      peg$c24 = peg$otherExpectation(\"White Spaces\"),\n      peg$c25 = peg$otherExpectation(\"Character\"),\n      peg$c26 = /^[^\\r\\n]/,\n      peg$c27 = peg$classExpectation([\"\\r\", \"\\n\"], true, false),\n      peg$c28 = function(c) {\n            // Ignore final dangling backslash\n            return c === \"\\\\\" ? undefined : c;\n          },\n      peg$c29 = peg$otherExpectation(\"Line Terminator\"),\n      peg$c30 = \"\\r\\n\",\n      peg$c31 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c32 = /^[\\n\\r]/,\n      peg$c33 = peg$classExpectation([\"\\n\", \"\\r\"], false, false),\n      peg$c34 = peg$otherExpectation(\"Line Continuation\"),\n      peg$c35 = \"\\\\\",\n      peg$c36 = peg$literalExpectation(\"\\\\\", false),\n      peg$c37 = peg$otherExpectation(\"Escape Sequence\"),\n      peg$c38 = peg$anyExpectation(),\n      peg$c39 = function() { return text(); },\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsePropertiesFile() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseFullLine();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseFullLine();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseTrailingLine();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c0(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseFullLine() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c1(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseLine() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$currPos;\n    s3 = peg$parse_();\n    if (s3 !== peg$FAILED) {\n      s4 = [];\n      s5 = peg$parseCONT();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parseCONT();\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseComment();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parsePropertyEntry();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c2(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseTrailingLine() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseLine();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c3(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseComment() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseCommentCharacter();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseC();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseC();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c4();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseCommentCharacter() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c6.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c7); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c5); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyEntry() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsePropertyKey();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parseKeyElementSeparator();\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsePropertyElement();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c8(s1, s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyKey() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parseESCAPE();\n    if (s1 === peg$FAILED) {\n      if (peg$c10.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c11); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseCONT();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s3;\n        s4 = peg$c12(s1);\n      }\n      s3 = s4;\n      if (s3 === peg$FAILED) {\n        s3 = peg$parseESCAPE();\n        if (s3 === peg$FAILED) {\n          if (peg$c13.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c14); }\n          }\n        }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseCONT();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c12(s1);\n        }\n        s3 = s4;\n        if (s3 === peg$FAILED) {\n          s3 = peg$parseESCAPE();\n          if (s3 === peg$FAILED) {\n            if (peg$c13.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n          }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c15(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c9); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsePropertyElement() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$parseCONT();\n    if (s3 !== peg$FAILED) {\n      peg$savedPos = s2;\n      s3 = peg$c4();\n    }\n    s2 = s3;\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseESCAPE();\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseC();\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$parseCONT();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c4();\n        }\n        s2 = s3;\n        if (s2 === peg$FAILED) {\n          s2 = peg$parseESCAPE();\n          if (s2 === peg$FAILED) {\n            s2 = peg$parseC();\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c17(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c16); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseKeyElementSeparator() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parseCONT();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parseCONT();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        s5 = peg$parseCONT();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parseCONT();\n        }\n        if (s4 !== peg$FAILED) {\n          if (peg$c19.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseWS();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseCONT();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseCONT();\n          }\n          if (s4 !== peg$FAILED) {\n            s1 = [s1, s2, s3, s4];\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c18); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseWS() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (peg$c22.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c23); }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c21); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parseWS();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseWS();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c24); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseC() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c26.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c27); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c28(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c25); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseNL() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.substr(peg$currPos, 2) === peg$c30) {\n      s0 = peg$c30;\n      peg$currPos += 2;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s0 === peg$FAILED) {\n      if (peg$c32.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c33); }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c29); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseCONT() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 92) {\n      s1 = peg$c35;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c36); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseNL();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parse_();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c34); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseESCAPE() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    s2 = peg$parseCONT();\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c35;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.length > peg$currPos) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n\n    return s0;\n  }\n\n\n    // Whether to include blank and comment lines\n    //options.all = true;\n    // Whether to include separator\n    //options.sep = true;\n    // Whether to include indentation\n    //options.indent = true;\n    // Whether to include eol (end of line)\n    //options.eol = true;\n    // Whether to include the original logical line\n    //options.original = true;\n    // Whether to include location info\n    //options.location = true;\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/properties.pegjs","import { parseToEntries } from './parse-to-entries';\nimport { parseOptions } from './options';\n\n\nconst parseToPropertiesOptions = [\n  'namespace',  // Parse dot separated keys as namespaced\n];\n\n\n/**\n * Parse .properties file content to a properties object, with property key as\n * the key and property element as the value.\n *\n * Alias of parseToProperties\n *\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {object} Parsed result in properties object.\n */\nexport function parse(input, options) {\n  return parseToProperties(input, options);\n}\n\n/**\n * Parse .properties file content to a properties object, with property key as\n * the key and property element as the value.\n * @param {string} input Properties file content in string.\n * @param {*} [options] Options for parsing.\n * @returns {object} Parsed result in properties object.\n */\nexport function parseToProperties(input, options) {\n  let entries = parseToEntries(input);\n  return entriesToProperties(entries, options);\n}\n\n/**\n * Convert parsed entries to a properties object.\n * @param {Array} entries Entries to be converted.\n * @param {Object} [options] Options for converting\n * @returns {object} Converted properties object.\n */\nexport function entriesToProperties(entries, options) {\n  options = parseOptions(options, parseToPropertiesOptions);\n  let properties = {};\n\n  for (let entry of entries) {\n    // Only key and element are relevant\n    let { key, element } = entry;\n\n    // Blank and comment lines are ignored\n    if (key === null) continue;\n\n    // Parsed array adheres to what user authored,\n    // while in properties, we need to unescape backslashes.\n    key = unescapeProperty(key);\n    element = unescapeProperty(element);\n\n    // Assign to properties by key, later entries overwrite previous ones\n    if (options.namespace) {\n      let namespacedKey = parseNamespace(key);\n      let property = properties;\n      namespacedKey.forEach((name, i) => {\n        // This is the last component of the key\n        if (i === namespacedKey.length - 1) {\n          property[name] = element;\n          return;\n        }\n\n        // This is part of the namespace\n        if (name in property) {\n          // Namespace itself and keys under it may all have values\n          // e.g. \"foo = bar\" \"foo.qux = quux\"\n          if (typeof property[name] === 'string') {\n            // Make value of namespace a value of an empty key under the\n            // namespace\n            property[name] = { '': property[name] };\n          }\n        } else {\n          property[name] = {};\n        }\n        property = property[name];\n      });\n    } else {\n      properties[key] = element;\n    }\n  }\n\n  return properties;\n}\n\n\n/**\n * Unescape backslash escaped sequences.\n * @param {string} input String to be mutated.\n * @returns {string} Unescaped input.\n * @throws {SyntaxError} Invalid Unicode escape sequence\n */\nfunction unescapeProperty(input) {\n  // Unescape unicode\n  let output = input.replace(/\\\\u([0-9A-Fa-f]{0,4})/g, (match, code) => {\n    if (code.length !== 4) throw new SyntaxError('Invalid Unicode escape sequence');\n    return String.fromCharCode(parseInt(code, 16));\n  });\n\n  // Unescape other single character\n  return output.replace(/\\\\(.)/g, (match, escaped) => {\n    switch (escaped) {\n      case 'f': return '\\f';\n      case 'n': return '\\n';\n      case 'r': return '\\r';\n      case 't': return '\\t';\n      default: return escaped;\n    }\n  });\n}\n\n/**\n * Turn dot separated string into an array of relevant components.\n * @param {string} key The dot separated string.\n * @returns {Array} Array of key components.\n */\nfunction parseNamespace(key) {\n  return key.split('.');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/parse-to-properties.js","/**\n * Stringify properties object or entries to .properties file content.\n * @param {Array | Object} input Properties object or entries.\n * @param {Object} [options] Stringify options.\n * @returns {string} .properties file content.\n */\nexport function stringify(input, options) {\n  if (input instanceof Array) {\n    return stringifyFromEntries(input, options);\n  }\n\n  return stringifyFromProperties(input, options);\n}\n\n/**\n * Stringify entries to .properties file content.\n * @param {Array} entries Property entries.\n * @param {Object} [options] Stringify options, used when specified fields are\n *     not available in each entry.\n * @returns {string} .properties file content.\n */\nexport function stringifyFromEntries(entries, options) {\n  options = parseOptions(options);\n\n  let output = '';\n  for (let entry of entries) {\n    const { key, element } = entry;\n    const sep = entry.sep || options.sep;\n    const indent = entry.indent || '';\n    const eol = 'eol' in entry\n      ? entry.eol || ''   // Use empty string in case eol is null.\n      : options.eol;\n\n    // Prefer original if available\n    if (entry.original != null) {\n      output += entry.original;\n    } else {\n      // Output a blank line for blank and comment entry\n      output += key == null || element == null\n        ? '' : indent + key + sep + element;\n    }\n\n    output += eol;\n  }\n\n  return output;\n}\n\n/**\n * Stringify properties object to .properties file content.\n * @param {Object} properties Properties object.\n * @param {Object} [options] Stringify options.\n * @returns {string} .properties file content.\n */\nexport function stringifyFromProperties(properties, options) {\n  options = parseOptions(options);\n\n  let output = '';\n  for (let key in properties) {\n    let element = properties[key];\n    if (typeof element === 'string') {\n      if (options.namespace) {\n        output += escapeKey(options.namespace);\n\n        // Add a dot after namespace if key is not empty\n        if (key) {\n          output += '.';\n        }\n      }\n      output += escapeKey(key) +\n          options.sep +\n          escapeElement(element) +\n          options.eol;\n    } else {\n      // Namespaced properties\n      let namespace = options.namespace\n        ? options.namespace + '.' + key\n        : key;\n      output += stringifyFromProperties(element,\n          Object.assign({}, options, { namespace: namespace }));\n    }\n  }\n\n  return output;\n}\n\n/**\n * Normalize user provided options.\n * @param {*} options Original options.\n * @returns {Object} Normalized options.\n */\nfunction parseOptions(options) {\n  options = options || {};\n  options.sep = options.sep || ' = ';\n  options.eol = options.eol || '\\r\\n';\n  return options;\n}\n\n/**\n * Escape special characters in property key.\n * @param {string} key Key to be mutated.\n * @returns {string} Escaped key.\n */\nfunction escapeKey(key) {\n  return key.replace(/[\\s\\S]/g, (match) => {\n    switch (match) {\n      case '=': return '\\\\=';\n      case ':': return '\\\\:';\n      case ' ': return '\\\\ ';\n      default: return escapeElement(match);\n    }\n  });\n}\n\n/**\n * Escape special characters in property element.\n * @param {string} element Element to be mutated.\n * @returns {string} Escaped element.\n */\nfunction escapeElement(element) {\n  return element.replace(/[\\s\\S]/g, (match) => {\n    switch (match) {\n      case '\\\\': return '\\\\\\\\';\n      case '\\f': return '\\\\f';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n      case '\\t': return '\\\\t';\n      default: return match;\n    }\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/stringify.js"],"sourceRoot":""}