{"version":3,"sources":["../src/options.js"],"names":["parseOptions","options","availableOptionNames","option"],"mappings":";;;;;QAMgBA,Y,GAAAA,Y;AANhB;;;;;;AAMO,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,oBAA/B,EAAqD;AAC1D;AACAD,YAAUA,WAAW,EAArB;;AAEA;AACA,MAAIA,YAAY,IAAhB,EAAsB;AACpBA,cAAU,EAAV;AADoB;AAAA;AAAA;;AAAA;AAEpB,2BAAmBC,oBAAnB,8HAAyC;AAAA,YAAhCC,MAAgC;;AACvCF,gBAAQE,MAAR,IAAkB,IAAlB;AACD;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKpB,WAAOF,OAAP;AACD;;AAED;AACA;AACA,MAAI,OAAOA,QAAQ,EAAR,CAAP,KAAuB,SAA3B,EAAsC;AAAA;AAAA;AAAA;;AAAA;AACpC,4BAAmBC,oBAAnB,mIAAyC;AAAA,YAAhCC,OAAgC;;AACvC,YAAI,EAAEA,WAAUF,OAAZ,CAAJ,EAA0B;AACxBA,kBAAQE,OAAR,IAAkBF,QAAQ,EAAR,CAAlB;AACD;AACF;AALmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMrC;;AAED,SAAOA,OAAP;AACD","file":"options.js","sourcesContent":["/**\n * Normalize options.\n * @param {*} options Options to be parsed; it can be object, boolean, null or undefined.\n * @param {!Array<string>} availableOptionNames All possible option names.\n * @returns {object} Normalized options.\n */\nexport function parseOptions(options, availableOptionNames) {\n  // Fix `null`, `false` as the options\n  options = options || {};\n\n  // `true` is a shortcut to turn all options on\n  if (options === true) {\n    options = {};\n    for (let option of availableOptionNames) {\n      options[option] = true;\n    }\n    return options;\n  }\n\n  // { '': true } is also a shorcut to turn all options on, while allow\n  // individual options to be turned off by setting them explicitly.\n  if (typeof options[''] === 'boolean') {\n    for (let option of availableOptionNames) {\n      if (!(option in options)) {\n        options[option] = options[''];\n      }\n    }\n  }\n\n  return options;\n}\n"]}